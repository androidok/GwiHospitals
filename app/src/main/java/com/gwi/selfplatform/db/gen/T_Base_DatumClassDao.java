package com.gwi.selfplatform.db.gen;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table T__BASE__DATUM_CLASS.
*/
public class T_Base_DatumClassDao extends AbstractDao<T_Base_DatumClass, Void> {

    public static final String TABLENAME = "T__BASE__DATUM_CLASS";

    /**
     * Properties of entity T_Base_DatumClass.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Code = new Property(0, Integer.class, "Code", false, "CODE");
        public final static Property Name = new Property(1, String.class, "Name", false, "NAME");
        public final static Property Memo = new Property(2, String.class, "Memo", false, "MEMO");
        public final static Property Status = new Property(3, Integer.class, "Status", false, "STATUS");
        public final static Property WbCode = new Property(4, String.class, "WbCode", false, "WB_CODE");
        public final static Property PyCode = new Property(5, String.class, "PyCode", false, "PY_CODE");
    };


    public T_Base_DatumClassDao(DaoConfig config) {
        super(config);
    }
    
    public T_Base_DatumClassDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'T__BASE__DATUM_CLASS' (" + //
                "'CODE' INTEGER," + // 0: Code
                "'NAME' TEXT," + // 1: Name
                "'MEMO' TEXT," + // 2: Memo
                "'STATUS' INTEGER," + // 3: Status
                "'WB_CODE' TEXT," + // 4: WbCode
                "'PY_CODE' TEXT);"); // 5: PyCode
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'T__BASE__DATUM_CLASS'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, T_Base_DatumClass entity) {
        stmt.clearBindings();
 
        Integer Code = entity.getCode();
        if (Code != null) {
            stmt.bindLong(1, Code);
        }
 
        String Name = entity.getName();
        if (Name != null) {
            stmt.bindString(2, Name);
        }
 
        String Memo = entity.getMemo();
        if (Memo != null) {
            stmt.bindString(3, Memo);
        }
 
        Integer Status = entity.getStatus();
        if (Status != null) {
            stmt.bindLong(4, Status);
        }
 
        String WbCode = entity.getWbCode();
        if (WbCode != null) {
            stmt.bindString(5, WbCode);
        }
 
        String PyCode = entity.getPyCode();
        if (PyCode != null) {
            stmt.bindString(6, PyCode);
        }
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    /** @inheritdoc */
    @Override
    public T_Base_DatumClass readEntity(Cursor cursor, int offset) {
        T_Base_DatumClass entity = new T_Base_DatumClass( //
            cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0), // Code
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // Name
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // Memo
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // Status
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // WbCode
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5) // PyCode
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, T_Base_DatumClass entity, int offset) {
        entity.setCode(cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0));
        entity.setName(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setMemo(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setStatus(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setWbCode(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setPyCode(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
     }
    
    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(T_Base_DatumClass entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    /** @inheritdoc */
    @Override
    public Void getKey(T_Base_DatumClass entity) {
        return null;
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
