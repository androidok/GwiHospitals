apply plugin: 'checkstyle'
apply plugin: 'findbugs'
/*
 * Copyright 2015 Vincent Brison.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Add checkstyle to the check task.
check.dependsOn 'checkstyle'

task checkstyle(type: Checkstyle) {
    configFile file("${project.rootDir}/config/quality/checkstyle/checkstyle.xml")
    configProperties.checkstyleSuppressionsPath = file("${project.rootDir}/config/quality/checkstyle/suppressions.xml").absolutePath
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/baidu/**'
    exclude '**/viewpagerindicator/**'
    exclude '**/beans/**'
    exclude '**/tRequest/**'
    exclude '**/gResponse/**'
    exclude '**/request/**'
    exclude '**/response/**'
    exclude '**/boc/**'
    exclude '**/zhifubao/**'
    exclude '**/wechat/**'
    exclude '**/DemoGenerator.java'
    exclude '**/HospInfoDetailActivity.java'
    exclude '**/androidTest/**"'
    classpath = files()
}


task findbugs(type: FindBugs, dependsOn: assembleDebug) {
    ignoreFailures = true
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("${project.rootDir}/config/quality/findbugs/findbugs-filter.xml")
    classes = files("${project.rootDir}/app/build/intermediates/classes")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = true
        html.enabled = false
        xml {
            destination "$project.buildDir/reports/findbugs/findbugs.xml"
        }
        html {
            destination "$project.buildDir/reports/findbugs/findbugs.html"
        }
    }

    classpath = files()
}

task sourceMonitor(type:Exec) {
    workingDir "../config/quality/sourcemonitor"
    String args = "startMonitor.bat ${project.rootDir}\\config\\quality\\sourcemonitor ${project.buildDir}"
    commandLine 'cmd','/c',args
}
//  Add checkstyle to the check task.
//check.dependsOn findBugs

